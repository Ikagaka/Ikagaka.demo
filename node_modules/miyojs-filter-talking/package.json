{
  "name": "miyojs-filter-talking",
  "version": "1.0.0",
  "description": "talking - realtime talking flag",
  "keywords": [
    "miyojs",
    "miyojs-filter"
  ],
  "main": "talking.js",
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {},
  "devDependencies": {
    "coffee-script": ">= 1.8.0",
    "mocha": ">= 1.20.1",
    "chai": ">= 1.9.2",
    "sinon": ">= 1.10.3",
    "istanbul": ">= 0.3.2",
    "miyojs": ">= 1.0.3",
    "miyojs-filter-variables": ">= 1.0.0"
  },
  "author": {
    "name": "narazaka",
    "url": "http://narazaka.net/"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Narazaka/miyojs-filter-talking.git"
  },
  "readme": "talking - ただいま発話中\r\n========================================\r\n\r\nこれはなにか\r\n----------------------------------------\r\n\r\nこれはJavaScriptによる伺か用SHIORIサブシステムの実装である美代(miyoshiori)の辞書フィルタプラグインです。\r\n\r\n発話状態を検知するためのフィルタです。\r\n\r\nインストール\r\n----------------------------------------\r\n\r\n### 一般\r\n\r\n    npm install miyojs-filter-talking\r\n\r\n### ゴーストに追加する場合\r\n\r\nghost/masterをカレントディレクトリとして同様に\r\n\r\n    npm install miyojs-filter-talking\r\n\r\n含まれるフィルタ\r\n----------------------------------------\r\n\r\n### talking\r\n\r\n発話状態を検知するフィルタです。\r\n\r\nargumentをvalueとして扱い、必要なイベントを付加した後のvalueを返します。\r\n\r\n通常value_filterとして使います。\r\n\r\n依存\r\n----------------------------------------\r\n\r\nこのフィルタは以下に依存します。\r\n\r\n- [miyojs-filter-variables](https://github.com/Narazaka/miyojs-filter-variables.git)\r\n\r\n使用方法\r\n----------------------------------------\r\n\r\nMiyoの辞書ファイルでフィルタを読み込み、talking_initializeを実行します。\r\n\r\nまたvalue_filtersに登録します。\r\n\r\n    _load:\r\n    \tfilters: [..., append_value_filters, talking_initialize, ...]\r\n    \targument:\r\n    \t\ttalking_initialize:\r\n    \t\t\ttimeout: 30\r\n    \t\tappend_value_filters:\r\n    \t\t\t- talking\r\n\r\n### talking_initialize\r\n\r\ntalking_initializeはargument.talking_initialize.timeoutをタイムアウト秒数として設定します。デフォルトは25秒です。デフォルトは変更される可能性があるので設定することをおすすめします。\r\n\r\nこのタイムアウト時間はバルーンがユーザーに閉じられた場合等に発話終了イベントが発生しないので、発話終了イベントが発生しない場合に発話中フラグをリセットするために設定されます。\r\n\r\nこの値を0にすることでタイムアウトの発生を抑止できます。\r\n\r\nベースウェアの機能でOnBalloonBreak、OnBalloonClose等が発生する場合は、OnBalloonBreak、OnBalloonClose等に\\![raise,OnTalkingFilterTalkEnd]を設定し、この値を0にすることで、タイムアウトに頼らずにバルーンが閉じられた場合に対処できます。\r\n\r\n### 動作\r\n\r\ntalking_initializeを実行した後value_filtersに登録されると、全ての発話の先頭と末尾に\\![raise]を付加してイベントを発生させることでリアルタイムな発話状態を検知します。\r\n\r\nこのフィルタはMiyoインスタンスの辞書にOnTalkingFilterTalkBeginとOnTalkingFilterTalkEndエントリを追加するので、これらの名前を使用しないでください。\r\n\r\n### 発話中フラグ variables_temporary.talking\r\n\r\nMiyoインスタンスのvariables_temporary.talkingに発話中フラグがセットされます。\r\n発話中はtrue、それ以外はfalseです。\r\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/Narazaka/miyojs-filter-talking/issues"
  },
  "homepage": "https://github.com/Narazaka/miyojs-filter-talking",
  "_id": "miyojs-filter-talking@1.0.0",
  "_shasum": "4590e919a49daeab2eb858c6a3dc85453e3a1b69",
  "_from": "miyojs-filter-talking@>=1.0.0 <2.0.0"
}
