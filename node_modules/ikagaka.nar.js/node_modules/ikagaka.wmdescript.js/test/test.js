var ModuleTestWMDescript = (function(global) {

var _runOnNode = "process" in global;
var _runOnWorker = "WorkerLocation" in global;
var _runOnBrowser = "document" in global;

return new Test("WMDescript", {
        disable:    false,
        browser:    true,
        worker:     true,
        node:       true,
        button:     true,
        both:       true, // test the primary module and secondary module
    }).add([
        testWMDescript_parse,
    ]).run().clone();

function testWMDescript_parse(test, pass, miss) {
    wget("./shell_descript.json", "json", function(err, expected){
      wget("./shell_descript.txt", "arraybuffer", function(err, buffer){
          if(!!err) return test.done(miss());
          _text = WMEncoding.codeToString(WMEncoding.SJISToUNICODE(new Uint8Array(buffer)));
          var dic = WMDescript.parse(_text);
          if (match(expected, dic)) {
              test.done(pass());
          } else {
              test.done(miss(dic));
          }
      });
    });
}

function match(a, b){
    return Object.keys(a).every(function(key){
        return a[key] === b[key];
    }) && Object.keys(a).length === Object.keys(b).length;
}

function wget(url, type, callback){
    var xhr = new XMLHttpRequest();
    xhr.addEventListener("load", function() {
        if (200 <= xhr["status"] && xhr["status"] < 300) {

            console.info(xhr["response"]);

            if(typeof xhr["response"]["error"] === "undefined"){
                callback(null, xhr["response"]);
            }else{
                callback(new Error(xhr["response"]["error"]["message"]), "");
            }
        } else {
            callback(new Error(xhr["status"]), "");
        }
    });
    xhr["responseType"] = type;
    xhr.open("GET", url);
    xhr.send();
}

})((this || 0).self || global);
