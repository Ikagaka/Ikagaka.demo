// Generated by CoffeeScript 1.7.1

/* (C) 2014 Narazaka : Licensed under The MIT License - http://narazaka.net/license/MIT?2014 */
var PartPeriod, PartTime;

if (typeof require !== "undefined" && require !== null) {
  PartTime = require('parttime');
}

PartPeriod = (function() {
  function PartPeriod(periodString) {
    var name, period, value;
    if (periodString != null) {
      period = PartPeriod.parse(periodString);
      for (name in period) {
        value = period[name];
        this[name] = value;
      }
    }
  }

  PartPeriod.prototype.begin = null;

  PartPeriod.prototype.end = null;

  PartPeriod.parse = function(periodString) {
    var begin, end, result;
    result = null;
    if (result = periodString.match(/^([\d\-:.T*]+)\s*\/\s*([\d\-:.T*]+)$/)) {
      begin = new PartTime(result[1]);
      end = new PartTime(result[2]);
      if (begin.compare(end) > 0) {
        throw 'Invalid Period : beginning is later than ending';
      }
      return {
        begin: begin,
        end: end
      };
    } else {
      throw 'Invalid Period';
    }
  };

  PartPeriod.prototype.includes = function(date) {
    return (this.begin.compare(date) <= 0) && (this.end.compare(date) >= 0);
  };

  PartPeriod.prototype.toString = function() {
    return "" + this.begin + "/" + this.end;
  };

  return PartPeriod;

})();

if ((typeof module !== "undefined" && module !== null) && (module.exports != null)) {
  module.exports = PartPeriod;
}

//# sourceMappingURL=partperiod.map
